meta {
  name: get_token_with_new_password
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/api/auth/token/login/
  body: json
  auth: none
}

body:json {
  {
      "email": {{email}},
      "password": {{newPassword}}
  }
}

tests {
  const responseData = res.getBody();
  const responseSchema = {
      "type": "object",
      "properties":{
          "auth_token": {"type": "string"},
      },
      "required": ["auth_token"],
      "additionalProperties": false
  };
  
  test("Статус-код ответа должен быть 200", function () {
      expect(
  //         pm.response.status,
          "Убедитесь, что после изменения пароля через запрос к `api/users/set_password/`, запроc на получение токена с новым паролем возвращает ответ со статусом 200"
      ).to.be.eql("OK");
  });
  test('Структура ответа соответствует ожидаемой', function () {
  //     pm.response.to.have.jsonSchema(responseSchema);
      const auth_token = _.get(responseData, "auth_token");
      if (auth_token) {
          bru.setVar("userToken", auth_token);
      }
  });
}
